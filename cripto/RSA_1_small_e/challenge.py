from Crypto.Util.number import bytes_to_long, long_to_bytes

def rsa(m: int, e: int, n: int) -> int:
    return pow(m, e, n)

if __name__ == '__main__':
    n: int = 546550549403756998474474044066372518903802979042851784705529951167891139796026269672797692275860916072086920738049339547065419839363524653610757696500128550853610051414275896047709841562157110352987863106995430816332267833395991648840937423349101221731159073047525778583128276086560747687175423636492807246643660290495703418567171774862464480032233972916440285300783771895405866529306404253337482409373742348768694080134582560693077147985880963497653393393607279165956242278256941205450860227584894600145425233330832795346756990592880559459229304724801575830676299274779942795027231480645286911489388837457270184261085410939437223863072084313879554847014832832437342076342379006295100016462673393020966023366531997657083595260084149735534779881795640694473872674847134763289453518936333524753701759075140250700976075746750928991182542306895560540316118316352330721376931751588939012023716195599824056086331804429329790528879684613497236923660376840812528292046525344284416925001344441010340072321776544074072267352601731122104440518349341667490617565624492268434878210242718741583508168494904958742574413231171789483070293625924013107411935501930198604083766311900746948661892551253684930613999884815280132928140185309115748234323242143910799043246341207051731846241166382188667970927087603081841042779841210475918650192207399944190849668231411861705023598767728769985123963832440389677820214752639767319175051577115989033795242776194746294817407166255195842541791839978210970701790767591787592623330692977284097221007216301274651553173400209659682222415631476586660972480167131432969754302223042441353869652441306320510928750726137427707206612682448403390896000492416958756171076486742624008502007604203583438847092512419480868673113825825118819405059633505016279448200842298282444248325629017157200814299552986248735655412895481327268954790962790449607528991850588646286722615146809194169706001661725284104372477028945486549914799690116523805161762069243095687116534801408402226881540284304535746542968596021162342904294174940809332872857799992464471024242673918325886311446855452850650743028772917089052655631579395121317068783416067492108467787253171253900407704977200227733214385711949280490842460905069935897682023902777239014989606689085610941574075563332929962326619137510532651838639130190437036163145033821379398896783162823259774773716959962043876083803876047359197438317053368001571755215610739746291026205065369322420990758917457187763654436423603414797
    e: int = 71
    texto_cifrado_int: int = 299407201902387314636579119415480907379377881072189157480557033414880627006087304939515996986468963894372610765207053665618647851156062783183324408316515477454473937794951514183270635946387051289390139552909961640926345258574785423839165993061979554059696059399343593458044970935425565214106937147720753529054753375768234706732895178305495213535495051288714168767414734654444863778475255823914328869499360723225409801972875552298364123285459769295787783485151261372261397027663676928219882710540844896094577848589985360296263164636800786364623743082191762795824809761815286187886644012907758483127332676013326356566685318453506178463178458712552338481018096777021114255670129982721937448903709353765514181330345242899203039556437275184525078380618444813589835960554133650016422879019651893760627828549630217260956101138199721849204353559205297775635313205695535620615186645140905627694877666554062412594608845337234693827708325697178253904005410515113109544075505119665863030871000924914037663957491402668895689496146675353137560954887254052089212835792068961427178134696777424656397805444291180327285542633840187721129646928897697268487938151682617015213294829097907780654148400774813360168633611400268914513738317389779115212048460895194142807367275699012879713237093417871446819298607182505416811840737567208760139530341900950967686618352527683234015739510639301638528138775335491775772057317168088568358285624341541972199663284697518018355542699141189339144034257913091705984616635639472552576572582873741285972870434949822008553015721424886489202766200515390922833363582926194401839111865138971411081218247705382290747003022433440564680754504841533099345026210290007069534395234631486212456277283156689844469128932570752684743314373279845096405115783243359309367149162947762959458105373282401618345931489592954345677609170144237919866354119058628822555780204349483412584186358366235814927944910488654573949327554512055920788259899942744921792009072743824875251281643103538112679749739607294667730616573149981557879903462754718431548051582056978169474953599355025629948963768814137443198667723102380963860262034850064781825898144331190931025998552800926528438400978706591779055245274396539682338789597254684567026771650174134768120246730616751019126341858967775786251059200000000000000000000000000000000000000000000000000000000000000000000000
    print(f'{texto_cifrado_int=}')

    texto_decriptografado_int: int = 0
    print(f'{texto_decriptografado_int=}')

    texto_decriptografado: str = long_to_bytes(texto_decriptografado_int).decode('UTF-8')
    print(f'{texto_decriptografado=}')
    print(f'Flag: EITS{{{texto_decriptografado}}}')

