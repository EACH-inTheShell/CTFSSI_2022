from Crypto.Util.number import bytes_to_long, long_to_bytes

def rsa(m: int, e: int, n: int) -> int:
    return pow(m, e, n)

if __name__ == '__main__':
    n: int = 546550549403756998474474044066372518903802979042851784705529951167891139796026269672797692275860916072086920738049339547065419839363524653610757696500128550853610051414275896047709841562157110352987863106995430816332267833395991648840937423349101221731159073047525778583128276086560747687175423636492807246643660290495703418567171774862464480032233972916440285300783771895405866529306404253337482409373742348768694080134582560693077147985880963497653393393607279165956242278256941205450860227584894600145425233330832795346756990592880559459229304724801575830676299274779942795027231480645286911489388837457270184261085410939437223863072084313879554847014832832437342076342379006295100016462673393020966023366531997657083595260084149735534779881795640694473872674847134763289453518936333524753701759075140250700976075746750928991182542306895560540316118316352330721376931751588939012023716195599824056086331804429329790528879684613497236923660376840812528292046525344284416925001344441010340072321776544074072267352601731122104440518349341667490617565624492268434878210242718741583508168494904958742574413231171789483070293625924013107411935501930198604083766311900746948661892551253684930613999884815280132928140185309115748234323242143910799043246341207051731846241166382188667970927087603081841042779841210475918650192207399944190849668231411861705023598767728769985123963832440389677820214752639767319175051577115989033795242776194746294817407166255195842541791839978210970701790767591787592623330692977284097221007216301274651553173400209659682222415631476586660972480167131432969754302223042441353869652441306320510928750726137427707206612682448403390896000492416958756171076486742624008502007604203583438847092512419480868673113825825118819405059633505016279448200842298282444248325629017157200814299552986248735655412895481327268954790962790449607528991850588646286722615146809194169706001661725284104372477028945486549914799690116523805161762069243095687116534801408402226881540284304535746542968596021162342904294174940809332872857799992464471024242673918325886311446855452850650743028772917089052655631579395121317068783416067492108467787253171253900407704977200227733214385711949280490842460905069935897682023902777239014989606689085610941574075563332929962326619137510532651838639130190437036163145033821379398896783162823259774773716959962043876083803876047359197438317053368001571755215610739746291026205065369322420990758917457187763654436423603414797
    e: int = 71
    texto_cifrado_int: int = 189416961107303987430533772720941557448038303199973244623108210824415916243721244666863216672267140987795479847408869902510579905960145188803481773574479713262102833208414204506623434859099530021422933942598784017520190091465216740779467671308049545996083528591663532729553711955800753675624592847675371429483671196549053802858383815747722107845547994310184382707560060955180291156288919040341712885885403206962727819426252039519806528209424184641931482940532740452845172975476888014007541674052208477816015436856505197124568232927189138778600248288781386143197750968178338896818488357992640595086242345537343988584904939531283211977170805978952258577119197842023416721250403817238508683281364857349568466571762091711602776119155798257177760439658821448833419154390284452811610729983915222500820518303272569236022052007367459373210770897301630070142251297350175173718946215691762092070907203820604297999696066386811927167386995050212971364710594745449499224555978080391550301327840372340022988114621203124789122430390299599640475956821878693634613781846538965187939907593991218487783748131944845135587219317970468277304816464635933265604160986381628444247618488147576759397481657328217827203311085666769346122320399357398400670238843080285586524956964809320752601583006076220094890574340813731972576298701856935886112742979542102707560634489612064169531322727784056457300065111952643922773176235264032693186339332770780849580127122346881879631085270738012830524683752484107477637269227401488966019260744290548522838781464931216558418913475003758277215858004587982133092206446603796405076672003757928643812059498516740748494989902929382478999391643960287288420449048470112327626396320110726119848307470969675907315699529963411335494984428207651455291456424020453362435439035925551456367847626712433060875338246518967473191323141292284667449212453435179638723721012578283381768501788406638024858111549445797858737820733624128982361562319395266882397745313008442628372774728504940029068427311182513608490731143653740012998939013397863958621074345929523268432150793611137988587225979309914009717635429099531184253482758719061680336352267591575629272988166819419173925806454113930124665652854794550506846668888827518007198843159319784721433271691564197663496259098304909053294782230385217119571006161012209179664262695725026348619856982589466312708674035207067546831922209349520263345014252446352164070018979850461847960922859918830686565251763389059035891833063957162818
    print(f'{texto_cifrado_int=}')

    texto_decriptografado_int: int = 0
    print(f'{texto_decriptografado_int=}')

    texto_decriptografado: str = long_to_bytes(texto_decriptografado_int).decode('UTF-8')
    print(f'{texto_decriptografado=}')
    print(f'Flag: EITS{{{texto_decriptografado}}}')

