

# This file was *autogenerated* from the file assets/solve_exp.sage
from sage.all_cmdline import *   # import sage library

_sage_const_739944136547903435882465611534045327075895064686951085166362724395958059091262373179158812301636155716467349521759526710551417310555088479006997283801747934997775454065088453032508166295753159668279602663833258057719839627876166406687430632301528087886825000121257672335333269634983672086319763667754495478700579129184164700029501620526444550408593829877898866922191511249082796495760428752652490594893262840259926941230529111388390503844287131564778185562829323092319324334002833719265550195317542022742441275021289890512234548369177828229659062590483275185651700492292920479421862920578494966408616395756636675578961879974601974897276313778998123267124089627264074721876230198033518539131065498285521832786082883154198821728718851616395351864998978927040367368438817250180207737258658925943629829849113074441785892859153037929430782170190887667738476807915367048535751868024994302201621779696588507763153704253477729484882868757132975737478023909497450889049174337788659012711149857286356184318112835877235326260159863966725400398790782143587272113575800144701556307622826146597249379881933169432681430914315510473853211280116594237068224729630936703882168363425023605890632508443192891582749754278981327011733497331749668374513339 = Integer(739944136547903435882465611534045327075895064686951085166362724395958059091262373179158812301636155716467349521759526710551417310555088479006997283801747934997775454065088453032508166295753159668279602663833258057719839627876166406687430632301528087886825000121257672335333269634983672086319763667754495478700579129184164700029501620526444550408593829877898866922191511249082796495760428752652490594893262840259926941230529111388390503844287131564778185562829323092319324334002833719265550195317542022742441275021289890512234548369177828229659062590483275185651700492292920479421862920578494966408616395756636675578961879974601974897276313778998123267124089627264074721876230198033518539131065498285521832786082883154198821728718851616395351864998978927040367368438817250180207737258658925943629829849113074441785892859153037929430782170190887667738476807915367048535751868024994302201621779696588507763153704253477729484882868757132975737478023909497450889049174337788659012711149857286356184318112835877235326260159863966725400398790782143587272113575800144701556307622826146597249379881933169432681430914315510473853211280116594237068224729630936703882168363425023605890632508443192891582749754278981327011733497331749668374513339); _sage_const_738637584120343550182569582750851002952237344473344108944248554946618613160818746750105472726640114048762110122450943216906174422944107429020036980037807506908870197409005004631256356216577956039635633610499689255664488043764527147006331538393987692421897561686779031608931281295066846470456740030061119725638717070625077838706480121796827805292386169027682813895032357257189365308869866885071405220865984221011815451441863841353249006936386921169004059861242418061265372834890678472716871833439073488784409220742483892751582098723981820655253900214026708961003426554073997923561088136889582489368698151045114846407079318686448912484911737794900490167442197134736037956567661302015713205834546969717285058650895944994055315215363770404523666011144690359269001648896716488983543183765148790460597987674443506257405847441576543205666654996558556168827553691730925051599897545554124080712773617479384867128086528793988951365745360569106053342563539601018398682757543115537053057543123515793622572439957541056486480622862722851182619309478927843625321125758273383829541954528141185283668445565067440970626163159063505391846553746088780807080514107521382624239146040822525186044364777708880523316345960920945920610570921465986032122872023 = Integer(738637584120343550182569582750851002952237344473344108944248554946618613160818746750105472726640114048762110122450943216906174422944107429020036980037807506908870197409005004631256356216577956039635633610499689255664488043764527147006331538393987692421897561686779031608931281295066846470456740030061119725638717070625077838706480121796827805292386169027682813895032357257189365308869866885071405220865984221011815451441863841353249006936386921169004059861242418061265372834890678472716871833439073488784409220742483892751582098723981820655253900214026708961003426554073997923561088136889582489368698151045114846407079318686448912484911737794900490167442197134736037956567661302015713205834546969717285058650895944994055315215363770404523666011144690359269001648896716488983543183765148790460597987674443506257405847441576543205666654996558556168827553691730925051599897545554124080712773617479384867128086528793988951365745360569106053342563539601018398682757543115537053057543123515793622572439957541056486480622862722851182619309478927843625321125758273383829541954528141185283668445565067440970626163159063505391846553746088780807080514107521382624239146040822525186044364777708880523316345960920945920610570921465986032122872023); _sage_constntegersage_const_71 = Integer(71); _sage_const_1 = Integer(1); _sage_const_1083619802725248274648189279358580 = Integer(1083619802725248274648189279358580)
def rsa(m: int, e: int, n: int) -> int:
    return pow(m, e, n)

if __name__ == '__main__':
    p: int = _sage_const
    q: int = _sage_const
    n: int = p * q
    texto_cifrado_int: int = _sage_const
    e: int = _sage_const_71 

    # Ja que a variavel e eh pequena, a mensagem criptografada nunca passa do valor de n
    # Portanto, podemos apenas elevar a mensagem criptografada pelo inverso de e
    texto_decriptografado_int: int = pow(texto_cifrado_int, (_sage_const_1 /_sage_const_71 ))

    # O assert abaixo vai verificar se os resultados realmente batem
    texto_plano_int: int = _sage_const_1083619802725248274648189279358580 
    assert texto_plano_int == texto_decriptografado_int

    print(f'{texto_decriptografado_int=}')

